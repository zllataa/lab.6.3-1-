// Lab_06_3(1).cpp
// < Половка Злата >
// Лабораторна робота № 6.3(1)
// Опрацювання одновимірних масивів за допомогою звичайних функцій та шаблонів
// Варіант 0.6


#include <iostream>
#include <iomanip>
#include <time.h>
#include <Windows.h>

using namespace std;

void Create(int* a, const int size, const int Low, const int High)
{
		for (int i = 1; i < size; i++)
			a[i] = Low + rand() % (High - Low + 1); a[0] = 3; a[1] = -22;
}

void Print(int* a, const int size)
{
	for (int i = 0; i < size; i++)
		cout << setw(4) << a[i];
	cout << "   |";
	cout << endl;
}

int Sum(int* a, const int size)//сума всіх елементів масиву
{
	int S = 0;
	for (int i = 0; i < size; i++)
		S += a[i];
	return S;
}

int Min(int* a, const int size) //найменший з непарних елементів масиву цілих чисел
{
	int min = a[0];
	for (int i = 1; i < size; i++)
		if (a[i] %2!=0 && a[i]<min)
			min = a[i];
	return min;
}

int Max(int* a, const int size)//найбільший з парних елементів масиву цілих чисел
{
	int max = a[0];
	for (int i = 1; i < size; i++)
		if (a[i] % 2 == 0 && a[i] > max )
			max = a[i];
	return max;
}

//впорядковує за не зростанням елементи масиву
void Sort(int* a, const int size) // метод вибору
{
	for (int i = 0; i < size - 1; i++) // індекс початку невпорядкованої частини
	{
		int min = a[i]; // пошук мінімального елемента
		int imin = i; // невпорядкованої частини
		for (int j = i + 1; j < size; j++)
			if (min < a[j])
			{
				min = a[j];
				imin = j;
			}
		a[imin] = a[i]; // обмін місцями мінімального та першого
		a[i] = min; // елементів невпорядкованої частини
	}
}

//впорядковує за не спаданням елементи масиву
void Sort1(int* a, const int size) // метод вставки
{
	for (int i = 1; i < size; i++) // індекс початку невпорядкованої частини
	{
		int tmp = a[i]; // вибрали елемент для вставки
		int j = 0; // пошук позиції вставки
		while (tmp > a[j])
			j++;
		for (int k = i - 1; k >= j; k--) // зсув
			a[k + 1] = a[k];
		a[j] = tmp; // вставка
	}
}

int main()
{
	SetConsoleCP(1251); // встановлення кодування Windows-1251 в  потік введення
	SetConsoleOutputCP(1251); // встановлення кодування Windows-1251 в  потік виведення
	srand((unsigned)time(NULL)); // ініціалізація генератора випадкових чисел
	const int n = 15;
	int a[n];
	int Low = -55;
	int High = 22;
	Create(a, n, Low, High);
	cout << "| Початковий масив:                              |";                                                             
	Print(a, n); cout << fixed;
	cout << "|------------------------------------------------|---------------------------------------------------------------|" << endl;
	cout << "| Сума елементів масиву:                         |  ";
	cout <<Sum(a, n) << setw (58) << "|" << endl; cout << fixed;
	cout << "|------------------------------------------------|---------------------------------------------------------------|" << endl;
	cout << "| Мінімальне значення непарних елементів масиву: |  "; 
	cout  << Min(a, n) << setw(59) << "|" << endl; cout << fixed;
	cout << "|------------------------------------------------|---------------------------------------------------------------|" << endl;
	cout << "| Максимальне значення парних елементів масиву:  |   ";
	cout  << Max(a, n) << setw(59) << "|" << endl; cout << fixed;
	cout << "|------------------------------------------------|---------------------------------------------------------------|" << endl;
	Sort(a, n);
	cout << "| Впорядкований масив не за зростанням:          |";
	Print(a, n); cout << fixed;
	cout << "|------------------------------------------------|---------------------------------------------------------------|" << endl;
	Sort1(a, n);
	cout << "| Впорядкований масив не за спаданням:           |";
	Print(a, n); cout << fixed;
	cout << "|------------------------------------------------|---------------------------------------------------------------|" << endl;
	return 0;
}